// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: andromeda/escrow/v1alpha1/genesis.proto

package escrowv1alpha1

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/codec/types"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// GenesisState defines the module's genesis state.
type GenesisState struct {
	// all the paramaters of the module
	Params *GenesisState_Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	// the identifier of the next agent
	NextAgent uint64 `protobuf:"varint,2,opt,name=next_agent,json=nextAgent,proto3" json:"next_agent,omitempty"`
	// all the agents
	Agents []*GenesisState_Agent `protobuf:"bytes,3,rep,name=agents,proto3" json:"agents,omitempty"`
	// the identifier of the next proposal
	NextProposal uint64 `protobuf:"varint,4,opt,name=next_proposal,json=nextProposal,proto3" json:"next_proposal,omitempty"`
	// all the proposals
	Proposals []*GenesisState_Proposal `protobuf:"bytes,5,rep,name=proposals,proto3" json:"proposals,omitempty"`
}

func (m *GenesisState) Reset()         { *m = GenesisState{} }
func (m *GenesisState) String() string { return proto.CompactTextString(m) }
func (*GenesisState) ProtoMessage()    {}
func (*GenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d8dfc87c909dc5a, []int{0}
}
func (m *GenesisState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState.Merge(m, src)
}
func (m *GenesisState) XXX_Size() int {
	return m.Size()
}
func (m *GenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisState proto.InternalMessageInfo

func (m *GenesisState) GetParams() *GenesisState_Params {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *GenesisState) GetNextAgent() uint64 {
	if m != nil {
		return m.NextAgent
	}
	return 0
}

func (m *GenesisState) GetAgents() []*GenesisState_Agent {
	if m != nil {
		return m.Agents
	}
	return nil
}

func (m *GenesisState) GetNextProposal() uint64 {
	if m != nil {
		return m.NextProposal
	}
	return 0
}

func (m *GenesisState) GetProposals() []*GenesisState_Proposal {
	if m != nil {
		return m.Proposals
	}
	return nil
}

// Params defines the parameters for the module.
type GenesisState_Params struct {
	// the maximum length allowed for metadata
	MaxMetadataLength uint64 `protobuf:"varint,1,opt,name=max_metadata_length,json=maxMetadataLength,proto3" json:"max_metadata_length,omitempty"`
}

func (m *GenesisState_Params) Reset()         { *m = GenesisState_Params{} }
func (m *GenesisState_Params) String() string { return proto.CompactTextString(m) }
func (*GenesisState_Params) ProtoMessage()    {}
func (*GenesisState_Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d8dfc87c909dc5a, []int{0, 0}
}
func (m *GenesisState_Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenesisState_Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisState_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenesisState_Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState_Params.Merge(m, src)
}
func (m *GenesisState_Params) XXX_Size() int {
	return m.Size()
}
func (m *GenesisState_Params) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState_Params.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisState_Params proto.InternalMessageInfo

func (m *GenesisState_Params) GetMaxMetadataLength() uint64 {
	if m != nil {
		return m.MaxMetadataLength
	}
	return 0
}

// Agent defines an account taking charge of a proposal.
type GenesisState_Agent struct {
	// the address of the agent
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// the address of the creator
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *GenesisState_Agent) Reset()         { *m = GenesisState_Agent{} }
func (m *GenesisState_Agent) String() string { return proto.CompactTextString(m) }
func (*GenesisState_Agent) ProtoMessage()    {}
func (*GenesisState_Agent) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d8dfc87c909dc5a, []int{0, 1}
}
func (m *GenesisState_Agent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenesisState_Agent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisState_Agent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenesisState_Agent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState_Agent.Merge(m, src)
}
func (m *GenesisState_Agent) XXX_Size() int {
	return m.Size()
}
func (m *GenesisState_Agent) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState_Agent.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisState_Agent proto.InternalMessageInfo

func (m *GenesisState_Agent) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GenesisState_Agent) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

// Proposal defines a proposal.
type GenesisState_Proposal struct {
	// the unique identifier
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// the address of the proposer
	Proposer string `protobuf:"bytes,2,opt,name=proposer,proto3" json:"proposer,omitempty"`
	// the address of the agent in charge
	Agent string `protobuf:"bytes,3,opt,name=agent,proto3" json:"agent,omitempty"`
	// the messages which has been executed on the submission
	PreActions []*types.Any `protobuf:"bytes,4,rep,name=pre_actions,json=preActions,proto3" json:"pre_actions,omitempty"`
	// the messages which will be executed after the actions included in Msg/Exec
	PostActions []*types.Any `protobuf:"bytes,5,rep,name=post_actions,json=postActions,proto3" json:"post_actions,omitempty"`
	// any arbitrary metadata attached to the proposal
	Metadata string `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (m *GenesisState_Proposal) Reset()         { *m = GenesisState_Proposal{} }
func (m *GenesisState_Proposal) String() string { return proto.CompactTextString(m) }
func (*GenesisState_Proposal) ProtoMessage()    {}
func (*GenesisState_Proposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d8dfc87c909dc5a, []int{0, 2}
}
func (m *GenesisState_Proposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenesisState_Proposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisState_Proposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenesisState_Proposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState_Proposal.Merge(m, src)
}
func (m *GenesisState_Proposal) XXX_Size() int {
	return m.Size()
}
func (m *GenesisState_Proposal) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState_Proposal.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisState_Proposal proto.InternalMessageInfo

func (m *GenesisState_Proposal) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GenesisState_Proposal) GetProposer() string {
	if m != nil {
		return m.Proposer
	}
	return ""
}

func (m *GenesisState_Proposal) GetAgent() string {
	if m != nil {
		return m.Agent
	}
	return ""
}

func (m *GenesisState_Proposal) GetPreActions() []*types.Any {
	if m != nil {
		return m.PreActions
	}
	return nil
}

func (m *GenesisState_Proposal) GetPostActions() []*types.Any {
	if m != nil {
		return m.PostActions
	}
	return nil
}

func (m *GenesisState_Proposal) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

func init() {
	proto.RegisterType((*GenesisState)(nil), "andromeda.escrow.v1alpha1.GenesisState")
	proto.RegisterType((*GenesisState_Params)(nil), "andromeda.escrow.v1alpha1.GenesisState.Params")
	proto.RegisterType((*GenesisState_Agent)(nil), "andromeda.escrow.v1alpha1.GenesisState.Agent")
	proto.RegisterType((*GenesisState_Proposal)(nil), "andromeda.escrow.v1alpha1.GenesisState.Proposal")
}

func init() {
	proto.RegisterFile("andromeda/escrow/v1alpha1/genesis.proto", fileDescriptor_6d8dfc87c909dc5a)
}

var fileDescriptor_6d8dfc87c909dc5a = []byte{
	// 540 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xbf, 0x8e, 0xd3, 0x40,
	0x10, 0xc6, 0x63, 0xe7, 0x0f, 0xc9, 0x24, 0x20, 0xb1, 0x5c, 0xe1, 0x18, 0x9d, 0x15, 0x81, 0x10,
	0x69, 0x6e, 0xcd, 0x05, 0x10, 0x28, 0x54, 0x8e, 0x14, 0xae, 0x01, 0x14, 0xf9, 0x24, 0x84, 0x50,
	0xa4, 0x68, 0x2f, 0x5e, 0x7c, 0x91, 0x62, 0xaf, 0xb5, 0xbb, 0x40, 0xee, 0x1d, 0x28, 0x78, 0x06,
	0x4a, 0x6a, 0x1e, 0x02, 0x51, 0x9d, 0xa8, 0x28, 0x51, 0xd2, 0x41, 0x4d, 0x8f, 0xbc, 0xeb, 0xf5,
	0x5d, 0x93, 0xbb, 0x2b, 0x67, 0xbe, 0xdf, 0x37, 0xe3, 0x99, 0x1d, 0xc3, 0x7d, 0x92, 0x46, 0x9c,
	0x25, 0x34, 0x22, 0x3e, 0x15, 0x73, 0xce, 0x3e, 0xfa, 0x1f, 0xf6, 0xc9, 0x32, 0x3b, 0x26, 0xfb,
	0x7e, 0x4c, 0x53, 0x2a, 0x16, 0x02, 0x67, 0x9c, 0x49, 0x86, 0xba, 0x25, 0x88, 0x35, 0x88, 0x0d,
	0xe8, 0x76, 0xe7, 0x4c, 0x24, 0x4c, 0xcc, 0x14, 0xe8, 0xeb, 0x40, 0xbb, 0xdc, 0x6e, 0xcc, 0x58,
	0xbc, 0xa4, 0xbe, 0x8a, 0x8e, 0xde, 0xbf, 0xf3, 0x49, 0x7a, 0xa2, 0xa5, 0x3b, 0x7f, 0xeb, 0xd0,
	0x39, 0xd0, 0x2d, 0x0e, 0x25, 0x91, 0x14, 0x3d, 0x87, 0x46, 0x46, 0x38, 0x49, 0x84, 0x63, 0xf5,
	0xac, 0x7e, 0x7b, 0x80, 0xf1, 0xd6, 0x96, 0xf8, 0xbc, 0x11, 0x4f, 0x94, 0x2b, 0x2c, 0xdc, 0x68,
	0x17, 0x20, 0xa5, 0x2b, 0x39, 0x23, 0x31, 0x4d, 0xa5, 0x63, 0xf7, 0xac, 0x7e, 0x2d, 0x6c, 0xe5,
	0x99, 0x20, 0x4f, 0xa0, 0x31, 0x34, 0x94, 0x22, 0x9c, 0x6a, 0xaf, 0xda, 0x6f, 0x0f, 0xf6, 0xae,
	0xda, 0x46, 0xd9, 0xc3, 0xc2, 0x8c, 0xee, 0xc2, 0x75, 0xd5, 0x25, 0xe3, 0x2c, 0x63, 0x82, 0x2c,
	0x9d, 0x9a, 0x6a, 0xd4, 0xc9, 0x93, 0x93, 0x22, 0x87, 0x5e, 0x41, 0xcb, 0xe8, 0xc2, 0xa9, 0xab,
	0x76, 0x0f, 0xae, 0x3c, 0x55, 0x61, 0x0c, 0xcf, 0x4a, 0xb8, 0x4f, 0xa1, 0xa1, 0x87, 0x45, 0x18,
	0x6e, 0x25, 0x64, 0x35, 0x4b, 0xa8, 0x24, 0x11, 0x91, 0x64, 0xb6, 0xa4, 0x69, 0x2c, 0x8f, 0xd5,
	0xe6, 0x6a, 0xe1, 0xcd, 0x84, 0xac, 0x5e, 0x16, 0xca, 0x0b, 0x25, 0xb8, 0x0c, 0xea, 0x7a, 0xfc,
	0x01, 0x5c, 0x23, 0x51, 0xc4, 0xa9, 0xd0, 0x6b, 0x6e, 0x8d, 0x9c, 0x9f, 0xdf, 0xf6, 0x76, 0x8a,
	0x47, 0x0b, 0xb4, 0x72, 0x28, 0xf9, 0x22, 0x8d, 0x43, 0x03, 0xe6, 0x9e, 0x39, 0xa7, 0x44, 0x32,
	0xae, 0xd6, 0x79, 0xa1, 0xa7, 0x00, 0xdd, 0x4f, 0x36, 0x34, 0xcb, 0x3d, 0xdc, 0x00, 0x7b, 0x11,
	0x15, 0x1f, 0x67, 0x2f, 0x22, 0xf4, 0x08, 0x9a, 0x7a, 0x28, 0x7a, 0x79, 0xc5, 0x92, 0x44, 0x18,
	0xea, 0xfa, 0x4d, 0xab, 0x97, 0x58, 0x34, 0x86, 0x1e, 0x43, 0x3b, 0xe3, 0x74, 0x46, 0xe6, 0x72,
	0xc1, 0x52, 0xe1, 0xd4, 0xd4, 0xfe, 0x77, 0xb0, 0x3e, 0x49, 0x6c, 0x4e, 0x12, 0x07, 0xe9, 0x49,
	0x08, 0x19, 0xa7, 0x81, 0xe6, 0xd0, 0x13, 0xe8, 0x64, 0x4c, 0xc8, 0xd2, 0x57, 0xbf, 0xc0, 0xd7,
	0xce, 0x49, 0x63, 0x74, 0xa1, 0x69, 0xde, 0xc3, 0x69, 0xe4, 0x9f, 0x18, 0x96, 0xf1, 0xe8, 0x9f,
	0xf5, 0x7d, 0xed, 0x59, 0xa7, 0x6b, 0xcf, 0xfa, 0xbd, 0xf6, 0xac, 0xcf, 0x1b, 0xaf, 0x72, 0xba,
	0xf1, 0x2a, 0xbf, 0x36, 0x5e, 0x05, 0x76, 0xe7, 0x2c, 0xd9, 0x7e, 0x14, 0x23, 0xf3, 0x93, 0x4c,
	0xf2, 0xbe, 0x13, 0xeb, 0x6d, 0x7f, 0xeb, 0x1f, 0xfb, 0x4c, 0xc7, 0x26, 0xfc, 0x62, 0x57, 0x83,
	0xf1, 0x9b, 0xaf, 0x76, 0x37, 0x28, 0x6b, 0x8f, 0x75, 0xed, 0xd7, 0x05, 0xf1, 0xe3, 0x9c, 0x36,
	0xd5, 0xda, 0xd4, 0x68, 0x6b, 0xfb, 0xde, 0x56, 0x6d, 0x7a, 0x30, 0x19, 0x99, 0xfb, 0xfa, 0x63,
	0xdf, 0x2e, 0xb9, 0xe1, 0x50, 0x83, 0xc3, 0xa1, 0x21, 0x8f, 0x1a, 0x6a, 0x5d, 0x0f, 0xff, 0x07,
	0x00, 0x00, 0xff, 0xff, 0xb8, 0x9d, 0xc5, 0xbe, 0x68, 0x04, 0x00, 0x00,
}

func (m *GenesisState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenesisState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenesisState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Proposals) > 0 {
		for iNdEx := len(m.Proposals) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Proposals[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.NextProposal != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.NextProposal))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Agents) > 0 {
		for iNdEx := len(m.Agents) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Agents[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.NextAgent != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.NextAgent))
		i--
		dAtA[i] = 0x10
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenesis(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GenesisState_Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenesisState_Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenesisState_Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MaxMetadataLength != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.MaxMetadataLength))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GenesisState_Agent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenesisState_Agent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenesisState_Agent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GenesisState_Proposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenesisState_Proposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenesisState_Proposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Metadata) > 0 {
		i -= len(m.Metadata)
		copy(dAtA[i:], m.Metadata)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.Metadata)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.PostActions) > 0 {
		for iNdEx := len(m.PostActions) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PostActions[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.PreActions) > 0 {
		for iNdEx := len(m.PreActions) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PreActions[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Agent) > 0 {
		i -= len(m.Agent)
		copy(dAtA[i:], m.Agent)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.Agent)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Proposer) > 0 {
		i -= len(m.Proposer)
		copy(dAtA[i:], m.Proposer)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.Proposer)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintGenesis(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenesis(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GenesisState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovGenesis(uint64(l))
	}
	if m.NextAgent != 0 {
		n += 1 + sovGenesis(uint64(m.NextAgent))
	}
	if len(m.Agents) > 0 {
		for _, e := range m.Agents {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if m.NextProposal != 0 {
		n += 1 + sovGenesis(uint64(m.NextProposal))
	}
	if len(m.Proposals) > 0 {
		for _, e := range m.Proposals {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	return n
}

func (m *GenesisState_Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MaxMetadataLength != 0 {
		n += 1 + sovGenesis(uint64(m.MaxMetadataLength))
	}
	return n
}

func (m *GenesisState_Agent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	return n
}

func (m *GenesisState_Proposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovGenesis(uint64(m.Id))
	}
	l = len(m.Proposer)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.Agent)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	if len(m.PreActions) > 0 {
		for _, e := range m.PreActions {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.PostActions) > 0 {
		for _, e := range m.PostActions {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	l = len(m.Metadata)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	return n
}

func sovGenesis(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGenesis(x uint64) (n int) {
	return sovGenesis(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GenesisState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &GenesisState_Params{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextAgent", wireType)
			}
			m.NextAgent = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NextAgent |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Agents", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Agents = append(m.Agents, &GenesisState_Agent{})
			if err := m.Agents[len(m.Agents)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextProposal", wireType)
			}
			m.NextProposal = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NextProposal |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proposals", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proposals = append(m.Proposals, &GenesisState_Proposal{})
			if err := m.Proposals[len(m.Proposals)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GenesisState_Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxMetadataLength", wireType)
			}
			m.MaxMetadataLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxMetadataLength |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GenesisState_Agent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Agent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Agent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GenesisState_Proposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Proposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Proposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proposer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proposer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Agent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Agent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreActions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PreActions = append(m.PreActions, &types.Any{})
			if err := m.PreActions[len(m.PreActions)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostActions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PostActions = append(m.PostActions, &types.Any{})
			if err := m.PostActions[len(m.PostActions)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metadata = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGenesis(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenesis
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenesis
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenesis
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGenesis        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGenesis          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGenesis = fmt.Errorf("proto: unexpected end of group")
)
