syntax = "proto3";
package andromeda.test.v1alpha1;

import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";

// Msg defines the module's Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // Create creates an asset.
  rpc Create(MsgCreate) returns (MsgCreateResponse);

  // Send sends an asset from an account to another.
  rpc Send(MsgSend) returns (MsgSendResponse);
}

// MsgCreate is the Msg/Create request type.
message MsgCreate {
  option (cosmos.msg.v1.signer) = "creator";

  // the address of the creator
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // the name of the asset to create
  // Note: if creator already has the same asset, it will fail.
  string asset = 2;
}

// MsgCreateResponse is the Msg/Create response type.
message MsgCreateResponse {}

// MsgSend is the Msg/Send request type.
message MsgSend {
  option (cosmos.msg.v1.signer) = "sender";

  // the address of the sender
  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // the address of the recipient
  // Note: if the recipient already has the same asset, it will fail.
  string recipient = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // the asset to send
  string asset = 3;
}

// MsgSendResponse is the Msg/Send response type.
message MsgSendResponse {}
