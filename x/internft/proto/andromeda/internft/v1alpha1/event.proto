syntax = "proto3";
package andromeda.internft.v1alpha1;

import "andromeda/internft/v1alpha1/types.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";

// EventSend is emitted on Msg/Send.
message EventSend {
  // the sender of the token
  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // the recipient of the token
  string receiver = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // the token sent
  Token token = 3 [(gogoproto.nullable) = false];
}

// EventNewClass is emitted on Msg/NewClass.
message EventNewClass {
  // the operator of the class
  string operator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // the new class created
  Class class = 2 [(gogoproto.nullable) = false];

  // the traits of the new class
  repeated Trait traits = 3 [(gogoproto.nullable) = false];

  // app specific metadata of the new class
  google.protobuf.Any data = 4;
}

// EventUpdateClass is emitted on Msg/UpdateClass.
message EventUpdateClass {
  // the operator of the class
  string operator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // the class updated
  Class class = 2 [(gogoproto.nullable) = false];

  // app specific metadata of the class
  google.protobuf.Any data = 3;
}

// EventNewToken is emitted on Msg/NewToken.
message EventNewToken {
  // the operator of the class
  string operator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // the recipient of the new token
  string recipient = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // the new token created
  Token token = 3 [(gogoproto.nullable) = false];

  // the properties of the new token
  repeated Property properties = 4 [(gogoproto.nullable) = false];
}

// EventBurnToken is emitted on Msg/BurnToken.
message EventBurnToken {
  // the owner of the token
  string owner = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // the token burnt
  Token token = 2 [(gogoproto.nullable) = false];
}

// EventUpdateToken is emitted on Msg/UpdateToken.
message EventUpdateToken {
  // the owner of the token
  string owner = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // the token updated
  Token token = 2 [(gogoproto.nullable) = false];

  // the new properties
  repeated Property properties = 3 [(gogoproto.nullable) = false];
}
